external procedure ExtractObj(string,var Integer,var string);
external function Boolean ReadFirstItem(string,var record INVc,Boolean,Boolean);

global updating procedure DelPINMn(record RcVc RepSpec)
begin
	record PIVc PIr;
	record INVc INr;
	
	while(loopmain(PIr,1,true))begin
		INr.Code = PIr.ItemCode;
		if(readfirstmain(INr,1,true)==false)then begin
			logtext(0,"Delete Purch. item " & PIr.ItemCode);
			recorddelete(PIr);
			stepback(PIr);
		end;
	end;

return;
end;

global updating procedure RecalcPUMatrixExtraMn()
begin
  record PUVc PUr;
	record POVc POr;
	row POVc POrw;
	row PUVc PUrw;
	vector integer vRow,vRowCnt,vpos;
	integer rwcnt,mtrw,i,pos,j;
	boolean TrHs,testf,updatef,chect;
	vector string 100 vRowCnts;
	string 100 istr;
	record INVc INr;
	
	PUr.PONr = -1;
	TrHs = true;
	while(loopkey("PONr",PUr,1,TrHs))begin
	  if(PUr.PONr!=-1)then begin TrHs = false; end;
	  
	  if(TrHs)then begin
	    rwcnt = matrowcnt(PUr);
	    for(i=0;i<rwcnt;i=i+1)begin
	      matrowget(PUr,i,PUrw);
	      if(PUrw.PONr>-1)then begin
	        POr.SerNr = PUrw.PONr;
	        if(readfirstmain(POr,1,true))then begin
	          updatef = false;
	          if(PUrw.OrdRow<matrowcnt(POr))then begin
	            matrowget(POr,PUrw.OrdRow,POrw);
	            if(POrw.ArtCode==PUrw.ArtCode)then begin
                if((POrw.Shipd1+PUrw.Quant)<=POrw.Quant)then begin
                  logtext(0,PUrw.ArtCode & " Need to add to " & PUrw.Quant);
                  if(PUr.OKFlag==0)then begin
                    POrw.Shipd1 = POrw.Shipd1 + PUrw.Quant;
                  end else begin
                    POrw.Shipd1 = POrw.Shipd1 + PUrw.Quant;
                    POrw.Shipd2 = POrw.Shipd2 + PUrw.Quant;
                  end;
	                logtext(0," Extra val " & PUr.SerNr);
	                matrowput(POr,PUrw.OrdRow,POrw);
	                updatef = true;
	              end;
	            end else begin
	              logtext(0,PUrw.ArtCode & " Item Not Found " & PUrw.Quant & " ===  " & PUr.SerNr);
	            end;
	            if(updatef)then begin
	              recordstore(POr,true);
	            end;
	          end;
	        end;
	      end;
	    end;
	  end;
	end;

return;
end;


global updating procedure RecalcPUMatrixMn()	//Edit **********************************************Vas-P	28/09/2021
begin
	record PUVc PUr;
	record POVc POr;
	row POVc POrw;
	row PUVc PUrw;
	vector integer vRow,vRowCnt,vpos;
	integer rwcnt,mtrw,i,pos,j;
	boolean TrHs,testf,updatef,chect;
	vector string 100 vRowCnts;
	string 100 istr;
	record INVc INr;
	
	
	
	logtext(0,"RecalcPUMatrixMn start");
	// POr.SerNr = "109";
	// if(readfirstmain(POr,1,true))then begin
	POr.SerNr = "";
	while(loopmain(POr,1,true))begin
		ClearVector(vRow);
		ClearVector(vRowCnt);
		ClearVector(vpos);
		ClearVector(vRowCnts);
		rwcnt = matrowcnt(POr);
		for(i=0;i<rwcnt;i=i+1)begin
			matrowget(POr,i,POrw);
			ReadFirstItem(POrw.ArtCode,INr,false,false);
			vRow[POrw.ArtCode] = i;
      vRowCnt[POrw.ArtCode] = vRowCnt[POrw.ArtCode] + 1;
			if(INr.SerNrf!=1)then begin  
        vRowCnts[POrw.ArtCode] = vRowCnts[POrw.ArtCode] & i & ",";
			end else begin
			  for(j=0;j<POrw.Quant;j=j+1)begin
			    vRowCnts[POrw.ArtCode] = vRowCnts[POrw.ArtCode] & i & ",";
			  end;
			end;
		end;
		
		PUr.PONr = POr.SerNr;
		TrHs = true;
		while(loopkey("PONr",PUr,1,TrHs))begin
			testf = true;
			updatef = false;
			if(PUr.PONr!=POr.SerNr)then begin TrHs = false; testf = false; end;
			if(testf)then begin
				mtrw = matrowcnt(PUr);
				for(i=0;i<mtrw;i=i+1)begin
					matrowget(PUr,i,PUrw);
					if(vRowCnt[PUrw.ArtCode]<2)then begin
            if(PUrw.OrdRow!=vRow[PUrw.ArtCode])then begin
              PUrw.OrdRow = vRow[PUrw.ArtCode];
              updatef = true;
              matrowput(PUr,i,PUrw);
              logtext(0,POr.SerNr & " PUrw.ArtCode / i - " & PUrw.ArtCode & " / " & i);
            end;
					end else begin
					  pos = vpos[PUrw.ArtCode];
					  ExtractObj(vRowCnts[PUrw.ArtCode],pos,istr);
					  vpos[PUrw.ArtCode] = pos;
            if(nonblank(istr))then begin
              if(PUrw.OrdRow!=stringtoint(istr))then begin
                PUrw.OrdRow = stringtoint(istr);
                updatef = true;
                matrowput(PUr,i,PUrw);
                logtext(0,POr.SerNr & " PUrw.ArtCode / i - " & PUrw.ArtCode & " / " & i);
              end;
            end;
					end;
				end;
				if(updatef)then begin
					RecordStore(PUr,true);
				end;
			end;
		end;
		ResetLoop(PUr);
	end;
	
	resetloop(POr);
	POr.SerNr = "";
	while(loopmain(POr,1,true))begin
	  rwcnt = matrowcnt(POr);
    chect = false;
		for(i=0;i<rwcnt;i=i+1)begin
			matrowget(POr,i,POrw);
			if(POrw.Invd>POrw.Shipd1)then begin
			  chect = true;
			end;
		end;
	  
	  if(chect)then begin
	    logtext(0,"Need check PO " & POr.SerNr);
	  end;
	  
	end;
	
	
	logtext(0,"RecalcPUMatrixMn end");
	
return;
end;


global webpublic procedure WebFindPO()
begin
  record PUVc PUr;
	record POVc POr;
	row POVc POrw;
	row PUVc PUrw;
	vector integer vRow,vRowCnt,vpos;
	integer rwcnt,mtrw,i,pos,j;
	boolean TrHs,testf,updatef,chect;
	vector string 100 vRowCnts;
	string 100 istr;
	record INVc INr;
	
	istr = webgetarg("item");
	
	weboutstring(istr & "<BR>");
	while(loopmain(POr,1,true))begin
	  rwcnt = matrowcnt(POr);
	  for(i=0;i<rwcnt;i=i+1)begin
	    matrowget(POr,i,POrw);
	    
	    if(POrw.ArtCode==istr)then begin
	      weboutstring(".." & POr.SerNr & " " & POrw.Quant & "<BR>");
	      if(POrw.Shipd2!=POrw.Quant or POrw.Shipd1!=POrw.Quant)then begin
	        weboutstring("=======>>>" & POr.SerNr & " " & POrw.Quant);
	        weboutstring("<BR>");
	      end;
	    end;
	  
	  end;
	
	end;

return;
end;